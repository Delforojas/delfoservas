security:
  password_hashers:
    App\Entity\Users:
      algorithm: auto   # autodetecta bcrypt ($2y$...), argon2i, sodium, etc.
      migrate_from: ['bcrypt', 'auto']  # opcional, por si tienes mezcladas

  providers:
    app_user_provider:
      entity:
        class: App\Entity\Users
        property: email

  firewalls:
    login:
      pattern: ^/api/login
      stateless: true
      provider: app_user_provider
      json_login:
        check_path: /api/login
        username_path: email
        password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    api:
      pattern: ^/api
      stateless: true
      provider: app_user_provider
      jwt: ~


  access_control:
    # PÃšBLICAS primero
    - { path: ^/api/login$, roles: PUBLIC_ACCESS }
    - { path: ^/api/users/register$, roles: PUBLIC_ACCESS }
    - { path: ^/api/users/create$, roles: PUBLIC_ACCESS }   # mientras creas el 1er usuario
    - { path: ^/api, roles: PUBLIC_ACCESS, methods: [OPTIONS] }  # preflight CORS
    # El resto del API protegido
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }